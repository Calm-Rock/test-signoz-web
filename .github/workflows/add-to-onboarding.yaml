name: Add to Onboarding

on:
  pull_request:
    types: [labeled]

jobs:
  create-onboarding-issue:
    if: github.event.label.name == 'add-to-onboarding'
    runs-on: ubuntu-latest

    steps:
      - name: Check if PR modifies docs
        id: check-docs
        uses: actions/github-script@v7
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            
            const docsFiles = files.filter(file => 
              file.filename.startsWith('data/docs/') || 
              file.filename.startsWith('src/pages/docs/')
            );
            
            if (docsFiles.length === 0) {
              core.setFailed('No documentation files found in this PR');
              return;
            }

            const docInfo = docsFiles.map(file => ({
              path: file.filename,
              status: file.status
            }));

            core.setOutput('has_docs', 'true');
            core.setOutput('doc_files', JSON.stringify(docInfo));

      - name: Create issue in signoz-web
        if: steps.check-docs.outputs.has_docs == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const prTitle = context.payload.pull_request.title;
            const prUrl = context.payload.pull_request.html_url;
            const prAuthor = context.payload.pull_request.user.login;
            const docFiles = JSON.parse('${{ steps.check-docs.outputs.doc_files }}');
            
            const filesList = docFiles.map(file => 
              `- ${file.status === 'added' ? '‚ûï' : file.status === 'modified' ? 'üìù' : '‚ùå'} ${file.path}`
            ).join('\n');

            const issueBody = [
              '## Documentation to Add to Onboarding',
              '',
              `PR: ${prTitle} (#${prNumber})`,
              `Author: @${prAuthor}`,
              `PR Link: ${prUrl}`,
              '',
              '### Documentation Files Changed:',
              filesList,
              '',
              '### Context:',
              'This issue was automatically created because the PR was labeled with `add-to-onboarding`. The documentation needs to be manually added to the onboarding flow with appropriate categorization and search keywords.',
              '',
              '---',
              '**Note**: This is part of the semi-automated onboarding documentation process. Please review during sprint planning.'
            ].join('\n');

            const { data: issue } = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `[Onboarding] Add docs from PR #${prNumber}`,
              body: issueBody,
              labels: ['documentation', 'onboarding', 'product-pod'],
              assignees: ['Calm-Rock']
            });

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: `üìö **Onboarding Task Created**\n\nAn issue has been created to add this documentation to the onboarding flow:\n- Issue: #${issue.number}\n- Assigned to: @Calm-Rock\n\nThe documentation will be reviewed and added to onboarding during the next sprint planning.`
            });

            console.log(`Created issue #${issue.number} in ${context.repo.repo} repository`);
