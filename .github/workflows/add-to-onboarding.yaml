name: Add to Onboarding

# the default GITHUB_TOKEN will be enough‚Ä¶ no extra secret needed
permissions:
  contents: read          # safest default
  issues: write           # we will open an issue
  pull-requests: write    # we will add a comment on the PR

on:
  pull_request_target:    # <<‚Äë‚Äë runs in the base repo context
    types: [labeled]

jobs:
  create-onboarding-issue:
    if: github.event.label.name == 'add-to-onboarding'
    runs-on: ubuntu-latest

    steps:
      - name: Check if PR modifies docs
        id: check-docs
        uses: actions/github-script@v7
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const docsFiles = files.filter(f =>
              f.filename.startsWith('data/docs/') ||
              f.filename.startsWith('src/pages/docs/')
            );

            if (docsFiles.length === 0) {
              core.setFailed('no documentation files found in this PR');
              return;
            }

            core.setOutput('has_docs', 'true');
            core.setOutput('doc_files', JSON.stringify(docsFiles));

      - name: Create issue in the same repo
        if: steps.check-docs.outputs.has_docs == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}   # default token, already present
          script: |
            const pr      = context.payload.pull_request;
            const prFiles = JSON.parse('${{ steps.check-docs.outputs.doc_files }}');

            const list = prFiles.map(f =>
              `- ${f.status === 'added' ? '‚ûï' : f.status === 'modified' ? 'üìù' : '‚ùå'} ${f.filename}`
            ).join('\n');

            const body = [
              '## documentation to add to onboarding',
              '',
              `pr: ${pr.title} (#${pr.number})`,
              `author: @${pr.user.login}`,
              `link: ${pr.html_url}`,
              '',
              '### files changed:',
              list,
              '',
              '### context:',
              'this issue was auto‚Äëgenerated because the pr carries the `add-to-onboarding` label, ‚Ä¶ please slot these docs into the onboarding flow during the next sprint',
              '',
              '---',
              '**note**‚Ä¶ semi‚Äëautomated onboarding process'
            ].join('\n');

            const { data: issue } = await github.rest.issues.create({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              title: `[onboarding] docs from pr #${pr.number}`,
              body,
              labels: ['documentation', 'onboarding'],
              assignees: ['Calm-Rock']   // optional‚Ä¶ drop if the user is not a collaborator
            });

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              issue_number: pr.number,
              body: `üìö onboarding issue created‚Ä¶ see #${issue.number}`
            });
